name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: robertnpa/devsu-node-app

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run ESLint
      run: npm run lint -- --max-warnings 0

    - name: Run tests
      run: npm test

    - name: Run test coverage
      run: npm run test:coverage

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: robertnpa
        password: ${{ secrets.GH_PACKAGES_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=sha,format=short

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Create Kubernetes secret for GitHub Packages
      run: |
        kubectl create secret docker-registry ghcr-secret \
          --docker-server=ghcr.io \
          --docker-username=robertnpa \
          --docker-password=${{ secrets.GH_PACKAGES_TOKEN }} \
          --docker-email=Robert28pg@gmail.com \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Apply Kubernetes manifests
      run: |
        echo "Using context:"
        kubectl config current-context
        
        kubectl apply -f kubernetes/configmap.yaml
        kubectl apply -f kubernetes/secret.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
        kubectl apply -f kubernetes/ingress.yaml

    - name: Verify deployment
      run: |
        echo "Verifying deployment..."
        kubectl get pods -l app=devsu-node-app
        kubectl get svc devsu-node-app-service
        kubectl get ingress devsu-node-app-ingress 
