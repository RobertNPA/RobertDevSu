trigger:
  branches:
    include:
      - main

variables:
  - name: DOCKER_IMAGE
    value: 'devsu-node-app'

stages:
# ---------------------- BUILD & TEST ----------------------
- stage: Build
  displayName: 'Build, Lint, Test, Coverage, Docker Build'
  jobs:
  - job: BuildAndTest
    displayName: 'Build and Test'
    pool:
      name: default
    steps:
    - script: |
        node -v
        npm ci
      displayName: 'Install Dependencies'

    - script: |
        npm run lint -- --max-warnings 0
      displayName: 'Run ESLint'
      continueOnError: false

    - script: |
        npm test
      displayName: 'Run Unit Tests'

    - script: |
        npm run test:coverage
      displayName: 'Run Code Coverage'

    - script: |
        docker build -t $(DOCKER_IMAGE):latest .
      displayName: 'Build Docker Image'

    - script: |
        if ! command -v trivy &> /dev/null; then
          echo "Trivy not found, installing..."
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -
        fi
        ./trivy image $(DOCKER_IMAGE):latest || true
      displayName: 'Scan Docker Image for Vulnerabilities (Trivy)'

# ---------------------- DEPLOY ----------------------
- stage: Deploy
  displayName: 'Deploy to Kubernetes'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployToK8s
    displayName: 'Deploy to local Kubernetes'
    pool:
      name: default
    steps:
    - script: |
        echo "Using context:"
        kubectl config current-context

        kubectl apply -f kubernetes/configmap.yaml
        kubectl apply -f kubernetes/secret.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
        kubectl apply -f kubernetes/ingress.yaml

        echo "Verifying deployment..."
        kubectl get pods -l app=devsu-node-app
        kubectl get svc devsu-node-app-service
        kubectl get ingress devsu-node-app-ingress
      displayName: 'Apply Kubernetes Manifests'
